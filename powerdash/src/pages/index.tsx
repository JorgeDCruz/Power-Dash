// import { handleCSV } from "~/utils/functions";
import { type NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { ChangeEvent } from "react";
import { api } from "~/utils/api";
import {signOut} from "next-auth/react";
import * as AWS from "aws-sdk"

const Home: NextPage = () => {
  //Obtenemos los datos de la sesión actual a través de next-login "useSession"
  const { data: session, status } = useSession();
  //console.log("session", session);

  const router = useRouter();
  const mutation = api.CSV.CSV_Upload.useMutation();

  const bucketName = "ibmcsv";
  AWS.config.update({
    accessKeyId: "AKIAYLDXTIPNDFKCTJNU",
    secretAccessKey: "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",
    region: "us-east-2"
  });

  const s3 = new AWS.S3();
  



  const handleCSV = (e: ChangeEvent<HTMLInputElement>): void => {
    const input: FileList | null = e.target.files;
    if(input !== null){
      const file: File | undefined = input[0];

      const params = {
        Bucket: bucketName,
        Key: file?.name as string, 
        Body: file, // The content of the file
        ACL: 'public-read' // Optional: Set the file's ACL (Access Control List) for public read access
      };
      

      s3.upload(params, function(err: any, data: any) {
        if (err) {
          console.log('Error uploading file:', err);
        } else {
          console.log('File uploaded successfully. File location:', data.Location);
        }
      });
      

      let text: string;

      const reader = new FileReader();
      reader.onload = (e: ProgressEvent<FileReader>): void => {
        text = e.target?.result as string;
        mutation.mutate(text);
        console.log("Success")
        return;
      };
      reader.readAsText((file !== undefined)? file : new Blob);
    }
    return;
  }
  
  return (
    <>
      <Head>
        <title>Dashboard IBM</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/5969/5969083.png" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <input
          className=""
          onChange={handleCSV}
          accept=".csv, .txt"
          type="file"
        />
        <button
          className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
          onClick={() => {signOut()}}
        >
          Cerrar sesion
        </button>
      </main>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
